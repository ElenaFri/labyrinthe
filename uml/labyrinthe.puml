@startuml Labyrinthe

skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
hide enum methods

class Labyrinthe
{
    + {static} main(args: String[])
}

package views
{

}

package controllers
{

}

package models
{
	package tiles {
		class TileFactory {
			+ « Create » Tile()
			+ « Create » Tile(pos : Position)
			+ createAngledTile() : Tile
			+ createStraightTile() : Tile
			+ createTShapedTile() : Tile
		}

		abstract class Tile {
			- _type : String
			- _hasTreasure : Boolean
			- _treasure : Integer[0..23]
			- _freeWays : Boolean[*]
			- _canMove : Boolean
			+ {abstract}getFreeWays() : Boolean[*]
			+ {abstract}setOrientation()
			+ move(dir : Direction)
		}
		class AngledTile extends Tile {
			- _orientation : Integer[0..3]
			+ « Create » AngledTile()
			+ getFreeWays() : Boolean[*]
			+ setOrientation()
		}
		class StraightTile extends Tile {
			- _orientation : Integer[0,1]
			+ « Create » StraightTile()
			+ getFreeWays() : Boolean[*]
			+ setOrientation()
		}
		class TShapedTile extends Tile {
			- _orientation : Integer[0..3]
			+ « Create » TShapedTile()
			+ getFreeWays() : Boolean[*]
			+ setOrientation()
		}
	}

	package geometry {
		enum Direction {
			UP
			DOWN
			LEFT
			RIGHT
		}

		class Position {
			- _x: Integer[0..6]
			- _y: Integer[0..6]
			+ « Create » Position(x: Integer, y: Integer)
			+ getPosition() : Position
			+ setPosition(x: Integer, y: Integer)
			+ up()
			+ down()
			+ left()
			+ right()
		}
	}

	package game {
		class Gameboard {}
		'class Hallway {}
		class Card {}
		class Player {}
		class Piece {}
    }
}

Labyrinthe ..> views
controllers ...> models
views ..> models
views .> controllers
'Gameboard "1" *--> "6\n _hallways" Hallway
Gameboard "1" *---> "7\n _tiles" Tile
'Hallway "1" *--> "7\n _tiles_aligned" Tile
Player "1" o--> "6\n _hand" Card
Player "1" *--> "1\n _piece" Piece
Tile "1" o---> "1\n _pos" Position
TileFactory ..> AngledTile
TileFactory ..> StraightTile
TileFactory ..> TShapedTile
TileFactory ..> Tile
Tile ...> Direction
@enduml
